package org.jepetto.sql;

import java.io.IOException;
import java.sql.*;
import java.util.Properties;
import java.util.concurrent.Executor;

import org.jdom2.Document;

/**
 * xml�뿉 ���븳 connection �겢�옒�뒪濡쒖꽌, xpath瑜� �씠�슜�븯�뿬
 * dom instance�뿉 ���븳 �꽭�뀡�쓣 �깮�꽦�븳�떎.
 *  
 * @author 源�李쏀샇
 *
 */
public class XmlConnection implements Connection{

	/**
	 * no meaning
	 */
    int TRANSACTION_NONE	     = 0;
    
	/**
	 * no meaning
	 */
    int TRANSACTION_READ_UNCOMMITTED = 1;

	/**
	 * no meaning
	 */
    int TRANSACTION_READ_COMMITTED   = 2;

	/**
	 * no meaning
	 */
    int TRANSACTION_REPEATABLE_READ  = 4;

	/**
	 * no meaning
	 */
    int TRANSACTION_SERIALIZABLE     = 8;

	/**
	 * xpath
	 */
    private String path;
    
    /**
     * dom instance
     */
    private Document doc;

	/**
	 * 紐낆떆�맂 path�뒗 xml �뙆�씪�쓽 寃쎈줈濡쒖꽌, session �깮�꽦 �떆 李몄“�릺�뼱 �궗�슜�릺�뼱 吏꾨떎
	 * @param path
	 */
    public XmlConnection(String path){
		this.path = path;
    }

	/**
	 * 紐낆떆�맂 dom instance�뒗 , session �깮�꽦 �떆 李몄“�릺�뼱 �궗�슜�릺�뼱 吏꾨떎.
	 * @param doc
	 */
	public XmlConnection(Document doc){
		this.doc = doc;
	}
	
	public Statement createStatement() throws SQLException{ return null;}

	/**
	 * 二쇱뼱吏� xpath瑜� �씠�슜�븯�뿬 xml �꽭�뀡�쓣 �깮
	 * @param xpath 
	 */	
	public PreparedStatement prepareStatement(String xpath)	throws SQLException{
		PreparedStatement pStmt = null;
		if( doc!=null){
			pStmt = new XmlStatement(doc, xpath);
		}else{
			try {
				pStmt = new XmlStatement(path, xpath);
			} catch (IOException e) {
				throw new SQLException(e.getMessage());
			}
		}
		return pStmt;
	}


    public CallableStatement prepareCall(String sql) throws SQLException{ return null;}
						
    public String nativeSQL(String sql) throws SQLException{ return null;}

    public void setAutoCommit(boolean autoCommit) throws SQLException{ }

    public boolean getAutoCommit() throws SQLException{ return false;}

    public void commit() throws SQLException{ }

    public void rollback() throws SQLException{ }

    public void close() throws SQLException{  }

    public boolean isClosed() throws SQLException{ return false;}

    public DatabaseMetaData getMetaData() throws SQLException{ return null;}

    public void setReadOnly(boolean readOnly) throws SQLException{ }

    public boolean isReadOnly() throws SQLException{ return false;}

    public void setCatalog(String catalog) throws SQLException{ }

    public String getCatalog() throws SQLException{ return null;}

    public void setTransactionIsolation(int level) throws SQLException{ }

    public int getTransactionIsolation() throws SQLException{ return -1;}

    public SQLWarning getWarnings() throws SQLException{ return null;}

    public void clearWarnings() throws SQLException{ }


    public Statement createStatement(int resultSetType, int resultSetConcurrency)
	throws SQLException{ return null;}

    public PreparedStatement prepareStatement(String sql, int resultSetType, int resultSetConcurrency)
	throws SQLException{ return null;}

    public CallableStatement prepareCall(String sql, int resultSetType, int resultSetConcurrency) throws SQLException{ return null;}

    public java.util.Map getTypeMap() throws SQLException{ return null;}

    public void setTypeMap(java.util.Map map) throws SQLException{ }

    public void setHoldability(int holdability) throws SQLException{ }

    public int getHoldability() throws SQLException{ return -1;}

    public Savepoint setSavepoint() throws SQLException{ return null;}

    public Savepoint setSavepoint(String name) throws SQLException{ return null;}

    public void rollback(Savepoint savepoint) throws SQLException{ }

    public void releaseSavepoint(Savepoint savepoint) throws SQLException{ }

    public Statement createStatement(int resultSetType, int resultSetConcurrency, int resultSetHoldability) throws SQLException{ return null;}

    public PreparedStatement prepareStatement(String sql, int resultSetType, int resultSetConcurrency, int resultSetHoldability)
	throws SQLException{ return null;}

    public CallableStatement prepareCall(String sql, int resultSetType, int resultSetConcurrency, int resultSetHoldability) throws SQLException{ return null;}

    public PreparedStatement prepareStatement(String sql, int autoGeneratedKeys)
	throws SQLException{ return null;}

    public PreparedStatement prepareStatement(String sql, int[] columnIndexes)
	throws SQLException{ return null;}

    public PreparedStatement prepareStatement(String sql, String[] columnNames)
	throws SQLException{ return null;}

	public Array createArrayOf(String arg0, Object[] arg1) throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}

	public Blob createBlob() throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}

	public Clob createClob() throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}

	public NClob createNClob() throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}

	public SQLXML createSQLXML() throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}

	public Struct createStruct(String arg0, Object[] arg1) throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}

	public Properties getClientInfo() throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}

	public String getClientInfo(String arg0) throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}

	public boolean isValid(int arg0) throws SQLException {
		// TODO Auto-generated method stub
		return false;
	}

	public void setClientInfo(Properties arg0) throws SQLClientInfoException {
		// TODO Auto-generated method stub
		
	}

	public void setClientInfo(String arg0, String arg1) throws SQLClientInfoException {
		// TODO Auto-generated method stub
		
	}

	public boolean isWrapperFor(Class arg0) throws SQLException {
		// TODO Auto-generated method stub
		return false;
	}

	public Object unwrap(Class arg0) throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}

	public void setSchema(String schema) throws SQLException {
		// TODO Auto-generated method stub
		
	}

	public String getSchema() throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}

	public void abort(Executor executor) throws SQLException {
		// TODO Auto-generated method stub
		
	}

	public void setNetworkTimeout(Executor executor, int milliseconds) throws SQLException {
		// TODO Auto-generated method stub
		
	}

	public int getNetworkTimeout() throws SQLException {
		// TODO Auto-generated method stub
		return 0;
	}


}
